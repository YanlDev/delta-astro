---
// UniversitiesCarousel.astro

// Importaciones correctas de imágenes - usamos import directo
import uancvLogo from "../../assets/img/universities/uancv.png";
import unajLogo from "../../assets/img/universities/unaj.png";
import upeuLogo from "../../assets/img/universities/upeu.png";
import utpLogo from "../../assets/img/universities/utp.png";
import continentalLogo from "../../assets/img/universities/conti.png"; // o continental.png

// Array de universidades con nombres abreviados
const universities = [
  { 
    name: "U. Andina N.", 
    logo: uancvLogo, 
    fullName: "Universidad Andina Néstor Cáceres Velásquez" 
  },
  { 
    name: "U. Nacional", 
    logo: unajLogo, 
    fullName: "Universidad Nacional de Juliaca" 
  },
  { 
    name: "UPEU", 
    logo: upeuLogo, 
    fullName: "Universidad Peruana Unión" 
  },
  { 
    name: "UTP", 
    logo: utpLogo, 
    fullName: "Universidad Tecnológica del Perú" 
  },
  { 
    name: "U. Continental", 
    logo: continentalLogo, 
    fullName: "Universidad Continental" 
  },
];
---

<section id="universidades" class="py-16 bg-slate-900 relative overflow-hidden">
  <!-- Elementos decorativos de fondo (similar a los otros componentes) -->
  <div class="absolute inset-0 opacity-10">
    <div class="absolute top-1/3 -right-24 w-96 h-96 bg-indigo-500 rounded-full mix-blend-multiply blur-2xl"></div>
    <div class="absolute bottom-0 -left-24 w-72 h-72 bg-blue-500 rounded-full mix-blend-multiply blur-2xl"></div>
  </div>

  <!-- Grid de fondo -->
  <div class="absolute inset-0 opacity-5">
    <div class="h-full w-full grid grid-cols-12 gap-1">
      {Array(12).fill(0).map((_, i) => (
        <div class="h-full border-r border-gray-300"></div>
      ))}
    </div>
    <div class="h-full w-full grid grid-rows-6 gap-1">
      {Array(6).fill(0).map((_, i) => (
        <div class="w-full border-b border-gray-300"></div>
      ))}
    </div>
  </div>

  <div class="container mx-auto px-4 relative z-10">
    <!-- Encabezado de la sección -->
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-white mb-4">Presencia Universitaria</h2>
      <p class="text-gray-300 max-w-3xl mx-auto">
        Brindamos servicios académicos especializados a estudiantes de las principales universidades del país.
      </p>
      <div class="w-24 h-1 bg-gradient-to-r from-blue-600 to-indigo-600 mx-auto mt-6"></div>
    </div>

    <!-- Versión móvil: Carrusel -->
    <div class="md:hidden relative">
      <!-- Contenedor del carrusel -->
      <div class="universities-carousel overflow-hidden relative">
        <div class="universities-track flex items-center transition-transform duration-500 ease-in-out">
          {universities.map((university) => (
            <div class="university-slide flex-shrink-0 w-full px-4">
              <div class="bg-slate-800/80 backdrop-blur-sm border border-slate-700/50 rounded-lg p-6 flex flex-col items-center transition-all duration-300 hover:shadow-xl hover:-translate-y-1 h-full">
                <div class="relative w-full h-24 flex items-center justify-center mb-4 overflow-hidden">
                  <!-- Contenedor con fondo blanco para el logo -->
                  <div class="bg-white rounded-lg p-3 w-full h-full flex items-center justify-center">
                    <img 
                      src={university.logo.src} 
                      alt={`Logo de ${university.name}`} 
                      class="h-16 object-contain" 
                    />
                  </div>
                </div>
                <h3 class="text-lg font-medium text-white text-center">{university.name}</h3>
                <p class="text-xs text-gray-400 text-center mt-2">{university.fullName}</p>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Botones de navegación -->
      <button 
        id="prev-button" 
        class="absolute left-0 top-1/2 transform -translate-y-1/2 bg-blue-600/80 hover:bg-blue-700 text-white w-10 h-10 rounded-full flex items-center justify-center z-10 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 focus:ring-offset-slate-800 -ml-5"
        aria-label="Anterior"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
      </button>
      <button 
        id="next-button" 
        class="absolute right-0 top-1/2 transform -translate-y-1/2 bg-blue-600/80 hover:bg-blue-700 text-white w-10 h-10 rounded-full flex items-center justify-center z-10 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 focus:ring-offset-slate-800 -mr-5"
        aria-label="Siguiente"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </button>

      <!-- Indicadores -->
      <div class="flex justify-center mt-6">
        {universities.map((_, index) => (
          <button 
            class="carousel-indicator w-3 h-3 rounded-full mx-1 bg-slate-600 focus:outline-none hover:bg-blue-500 transition-colors" 
            data-index={index}
            aria-label={`Ir a la universidad ${index + 1}`}
          ></button>
        ))}
      </div>
    </div>

    <!-- Versión desktop: Cards -->
    <div class="hidden md:grid grid-cols-2 lg:grid-cols-5 gap-6">
      {universities.map((university) => (
        <div class="bg-slate-800/80 backdrop-blur-sm border border-slate-700/50 rounded-lg p-6 flex flex-col items-center transition-all duration-300 hover:shadow-xl hover:-translate-y-1 h-full">
          <div class="relative w-full h-24 flex items-center justify-center mb-4 overflow-hidden">
            <!-- Contenedor con fondo blanco para el logo -->
            <div class="bg-white rounded-lg p-3 w-full h-full flex items-center justify-center">
              <img 
                src={university.logo.src} 
                alt={`Logo de ${university.name}`} 
                class="h-16 object-contain" 
              />
            </div>
          </div>
          <h3 class="text-lg font-medium text-white text-center">{university.name}</h3>
          <p class="text-xs text-gray-400 text-center mt-2">{university.fullName}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  // Este script solo se ejecutará en móvil
  document.addEventListener('DOMContentLoaded', () => {
    if (window.innerWidth < 768) { // Solo para móvil
      const track = document.querySelector('.universities-track');
      const slides = document.querySelectorAll('.university-slide');
      const nextButton = document.getElementById('next-button');
      const prevButton = document.getElementById('prev-button');
      const indicators = document.querySelectorAll('.carousel-indicator');
      
      if (!track || !slides.length || !nextButton || !prevButton) return;
      
      let currentIndex = 0;
      let slideWidth = slides[0].offsetWidth;
      
      // Actualiza los indicadores
      const updateIndicators = () => {
        indicators.forEach((indicator, index) => {
          if (index === currentIndex) {
            indicator.classList.add('bg-blue-500');
            indicator.classList.remove('bg-slate-600');
          } else {
            indicator.classList.remove('bg-blue-500');
            indicator.classList.add('bg-slate-600');
          }
        });
      };
      
      // Va a un slide específico
      const goToSlide = (index) => {
        currentIndex = index;
        track.style.transform = `translateX(-${currentIndex * slideWidth}px)`;
        updateIndicators();
      };
      
      // Siguiente slide
      const nextSlide = () => {
        if (currentIndex < slides.length - 1) {
          goToSlide(currentIndex + 1);
        } else {
          goToSlide(0); // Volver al inicio si está en el último
        }
      };
      
      // Slide anterior
      const prevSlide = () => {
        if (currentIndex > 0) {
          goToSlide(currentIndex - 1);
        } else {
          goToSlide(slides.length - 1); // Ir al último si está en el primero
        }
      };
      
      // Event listeners
      nextButton.addEventListener('click', nextSlide);
      prevButton.addEventListener('click', prevSlide);
      
      // Configurar indicadores
      indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => goToSlide(index));
      });
      
      // Auto slide cada 5 segundos
      let autoSlideInterval = setInterval(nextSlide, 5000);
      
      // Pausar auto slide al interactuar con los controles
      const pauseAutoSlide = () => {
        clearInterval(autoSlideInterval);
        autoSlideInterval = setInterval(nextSlide, 5000);
      };
      
      nextButton.addEventListener('click', pauseAutoSlide);
      prevButton.addEventListener('click', pauseAutoSlide);
      indicators.forEach(indicator => {
        indicator.addEventListener('click', pauseAutoSlide);
      });
      
      // Actualizar en cambio de tamaño de pantalla
      window.addEventListener('resize', () => {
        if (window.innerWidth < 768) {
          slideWidth = slides[0].offsetWidth;
          goToSlide(currentIndex);
        }
      });
      
      // Inicializar
      updateIndicators();
    }
  });
</script>